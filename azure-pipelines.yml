trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8a13e460-457a-463e-ab57-526c4f3150d3'
  imageRepository: 'fverapiulisesv'
  containerRegistry: 'uveraapi.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'uveraapie3a8-auth'

stages:
- stage: BuildAndDeploy
  displayName: Build and Deploy stage
  jobs:
  - job: BuildAndDeploy
    displayName: Build and Deploy
    pool:
      name: 'Default'  # Reemplaza "Default" por el nombre de tu pool de agentes auto-hospedado
      demands:
        - agent.name -equals  LAPTOP-DNQCF9MM  # Especifica el nombre del agente auto-hospedado
    steps:
    - script: |
        if [[ "$(Build.SourceBranch)" == "refs/pull/"* ]]; then
          echo "##vso[task.setvariable variable=IS_PULL_REQUEST]true"
        else
          echo "##vso[task.setvariable variable=IS_PULL_REQUEST]false"
        fi
      displayName: 'Check if Pull Request'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - publish: $(Pipeline.Workspace)/manifests
      artifact: manifests

    - ${{ if eq(variables['IS_PULL_REQUEST'], 'true') }}:
      - task: Kubernetes@1
        displayName: 'Create a new namespace for the pull request'
        inputs:
          command: apply
          useConfigurationFile: true
          inline: '{ "kind": "Namespace", "apiVersion": "v1", "metadata": { "name": "$(k8sNamespaceForPR)" }}'

      - task: KubernetesManifest@0
        displayName: Create imagePullSecret
        inputs:
          action: createSecret
          secretName: $(imagePullSecret)
          namespace: $(k8sNamespaceForPR)
          dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

      - task: KubernetesManifest@0
        displayName: Deploy to the new namespace in the Kubernetes clus
